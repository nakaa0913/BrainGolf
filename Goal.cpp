/*==============================================================================

   頂点管理 [player.cpp]
														 Author :
														 Date   :
--------------------------------------------------------------------------------

==============================================================================*/
#include "player.h"
#include "input.h"
#include "texture.h"
#include "sprite.h"
#include "bullet.h"
#include "score.h"
#include "sound.h"
#include "bg.h"
#include "Goal.h"

#define GOAL_H (50)
#define GOAL_W (50)
//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static GOAL g_Goal[GOAL_MAX];

static int aa;

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitGoal(void)
{
	//テクスチャ読み込み


	//
	/*g_ShotSENo = LoadSound("data/SE/shot000.wav");*/
	aa = LoadTexture("data/TEXTURE/aa.png");

	for (int i = 0; i < GOAL_MAX; i++)
	{
		
	}


	//初期化


	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitGoal(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateGoal(void)
{

}

//=============================================================================
// 描画処理
//=============================================================================
void DrawGoal(void)
{
	for (int i = 0; i < GOAL_MAX; i++)
	{

		
			DrawSpriteColorRotate(aa, 320.0f, 400.0f, 200.0f, 200.0f, 0.0f, 0.0f, 1.0f, 1.0f, D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f),0.0f);
		
	}
}

//=============================================================================
// プレイヤー構造体の先頭アドレスを取得
//=============================================================================
GOAL* GetGoal(void)
{
	return &g_Goal[0];
}


void SetGoal(D3DXVECTOR2 pos)
{
	
}